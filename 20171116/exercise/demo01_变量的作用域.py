"""
一、命名空间(NameSpace)：
    概念：命名空间就是名字和对象的映射。理解为字典。
        相当于起作用的范围。
    1701班：命名空间
        王二狗
    1705班：命名明空
        王二狗
    规则：LEGB-rule
        L：local。局部的。比如函数/方法内部

        E：enclosing。封闭的。内层函数，可以搜索外层函数的命名空间

        G：Global。全局的。

        B：Built- in。内置。

二、作用域(scope)
    变量所起作用的范围。文本域
    1.局部变量：在函数里声明的变量。只能够在函数内部使用。
        不同的函数，即使局部变量名相同，也互不影响。

        局部变量的生命周期：变量从创建到销毁的裹成生命周期
            局部变量：在函数调用的时候才会创建，当函数执行完毕后，局部变量被会被系统回收。销毁。

    2.全局变量：在函数外声明变量(没有在函数内部)，所有的函数都可以使用该全局变量。
        声明：全局变量的声明，在函数的调用前。

    3.访问外部函数的变量：非局部，也非全局
"""
# 1.命名空间的查找规则：LEGB
# 全局的变量
num = 100

def fun1():
    num = 200
    def fun2():
        num = 300
        print(num)
    fun2()

fun1()


print("------------")
# 2.局部变量
def fun3():
    m = "我是函数里的变量--->局部变量"
    print(m)
    n = 5
    if n > 0:
        print(m)
        s = "我也是局部变量。。"
        print(s)
    m = "改变局部变量的值"
    s = "我也改。。"
    print(m)
    print(s)


fun3()
# print(m)  # m是一个局部变量，不能外部使用

def fun4():
    m = "我是另一个函数中的m。。"
    print(m)

fun4()


print("----------------")
a = "我是一个全局的变量"
print(a)

def fun5():
    print(a)
    print(b)
    # print(c)  # NameError: name 'c' is not defined

b = 100
fun5()
# c = 200  # 全局变量的定义，要在函数调用前边。

print("-------------")
def fun6():
    d = "我是外层函数的。。"
    print(d)

    def fun6_in():
        print(d)
        e = "我是内层函数的"
        print(e)
    fun6_in()

    # print(e)

fun6()
